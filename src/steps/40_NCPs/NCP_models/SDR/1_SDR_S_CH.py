# coding=UTF-8
# -----------------------------------------------
# Generated by InVEST 3.12.0 on Wed Nov 16 13:04:10 2022
# Model: Sediment Delivery Ratio
# -----------------------------------------------
# This script runs the Sediment Delivery Ratio model from InVEST. It first creates a handler that specifies which log output is sent to the console and how it is formatted.
# Then it defines the needed arguments (inputs) by specifying their values or the path to the input files. Finally it runs the invest model.


import logging
import sys
from os.path import join, dirname
from shutil import rmtree

import natcap.invest.sdr.sdr
import natcap.invest.utils

sys.path.append(join(dirname(__file__), '..'))
from load_params import load_params

params = load_params(
    check_params=[
        ['run_params', 'NCP_RUN_SCENARIO_ID'],
        ['run_params', 'NCP_RUN_YEAR'],
        ['run_params', 'NCP_RUN_OUTPUT_DIR'],
        ['data', 'lulc'],
        ['data', 'dem_filled'],
        ['data', 'erodibility_path'],
        ['data', 'erosivity_path'],
        ['data', 'watersheds'],
        ['SDR', 'biophysical_table_path'],
        ['SDR', 'ic_0_param'],
        ['SDR', 'k_param'],
        ['SDR', 'l_max'],
        ['other', 'n_workers'],
        ['SDR', 'sdr_max'],
        ['SDR', 'threshold_flow_accumulation'],
        ['other', 'remove_temp_files'],
    ]
)

args = {
    # This dictionary contains the input parameters required to run the SDR model.
    # Each key-value pair specifies a parameter and its corresponding value.
    'lulc_path': params['data']['lulc'],
    'biophysical_table_path': params['SDR']['biophysical_table_path'],
    'dem_path': params['data']['dem_filled'],
    # If SDR does not terminate, pass normal dem instead of filled dem.
    # Filled dem can be found in the intermediate_outputs folder.
    # Pass it here if you want to reuse it to save time.
    'erodibility_path': params['data']['erodibility_path'],
    'erosivity_path': params['data']['erosivity_path'],
    'ic_0_param': params['SDR']['ic_0_param'],
    'k_param': params['SDR']['k_param'],
    'l_max': params['SDR']['l_max'],
    'n_workers': params['other']['n_workers'],  # most SDR can only use 1 worker
    'sdr_max': params['SDR']['sdr_max'],
    'threshold_flow_accumulation': params['SDR']['threshold_flow_accumulation'],
    'watersheds_path': params['data']['watersheds'],
    'workspace_dir': join(
        params['run_params']['NCP_RUN_OUTPUT_DIR'],
        params['run_params']['NCP_RUN_SCENARIO_ID'],
        'SDR',
        params['run_params']['NCP_RUN_YEAR']),
}

if __name__ == '__main__':
    print("SDR: Starting Sediment Delivery Ratio model...")
    natcap.invest.sdr.sdr.execute(args)
    print("SDR: ...done!")

    if params['other']['remove_temp_files']:
        # remove intermediate outputs
        intermediate_output_dir = join(
            params['run_params']['NCP_RUN_OUTPUT_DIR'],
            params['run_params']['NCP_RUN_SCENARIO_ID'],
            'SDR',
            params['run_params']['NCP_RUN_YEAR'], 'intermediate_outputs')
        print(f"Removing intermediate outputs in {intermediate_output_dir}")
        # delete folder
        rmtree(intermediate_output_dir)
