# coding=UTF-8
# -----------------------------------------------
# Generated by InVEST 3.12.0 on Wed Nov 16 13:04:10 2022
# Model: Sediment Delivery Ratio
# -----------------------------------------------
# This script runs the Sediment Delivery Ratio model from InVEST. It first creates a handler that specifies which log output is sent to the console and how it is formatted.
# Then it defines the needed arguments (inputs) by specifying their values or the path to the input files. Finally it runs the invest model.


import logging
import sys

import natcap.invest.sdr.sdr
import natcap.invest.utils
import yaml, os

# Load the parameters from ../40_NCPs_params.yml (relative to this file)
with open(os.path.join(os.path.dirname(__file__), '..',
                       '40_NCPs_params.yml')) as stream:
    params = yaml.safe_load(stream)

# Creates a logger object for the current module, which can be used to log messages specific to this module
LOGGER = logging.getLogger(__name__)

# Creates a root logger object, which can be used to log messages at the application level
root_logger = logging.getLogger()

# Creates a logging handler that sends log messages to the standard output (console)
handler = logging.StreamHandler(sys.stdout)

# Defines the format for logging messages using the format provided by the natcap.invest toolkit. This format includes details like timestamps, log levels, and the actual message content
formatter = logging.Formatter(
    fmt=natcap.invest.utils.LOG_FMT,
    datefmt='%m/%d/%Y %H:%M:%S ')

# Sets the formatter for the logging handler
handler.setFormatter(formatter)

# Configures the basic settings for logging. It sets the log level to INFO, meaning only messages of level INFO and above will be logged. It also adds the handler
logging.basicConfig(level=logging.INFO, handlers=[handler])

args = {
    # This dictionary contains the input parameters required to run the SDR model.
    # Each key-value pair specifies a parameter and its corresponding value.
    'biophysical_table_path': params['SDR']['biophysical_table_path'],
    'dem_path': params['data']['dem_filled'],
    'drainage_path': '',
    'erodibility_path': params['SDR']['erodibility_path'],
    'erosivity_path': params['SDR']['erosivity_path'],
    'ic_0_param': params['SDR']['ic_0_param'],
    'k_param': params['SDR']['k_param'],
    'l_max': params['SDR']['l_max'],
    'lulc_path': params['data']['lulcc2018'],
    'n_workers': params['SDR']['n_workers'],
    'results_suffix': params['SDR']['results_suffix'],
    'sdr_max': params['SDR']['sdr_max'],
    'threshold_flow_accumulation': params['SDR']['threshold_flow_accumulation'],
    'watersheds_path': params['data']['watersheds'],
    'workspace_dir': params['SDR']['workspace_dir'],
}

if __name__ == '__main__':
    natcap.invest.sdr.sdr.execute(args)
