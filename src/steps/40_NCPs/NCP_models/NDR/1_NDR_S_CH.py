# coding=UTF-8
# -----------------------------------------------
# Generated by InVEST 3.12.0 on Wed Dec 14 09:17:43 2022
# Model: Nutrient Delivery Ratio
# -----------------------------------------------
# This script runs the Nutrient Delivery Ratio model from InVEST. It first
# creates a handler that specifies which log output is sent to the console
# and how it is formatted. Then it defines the needed arguments (inputs) by
# specifying their values or the path to the input files.

import sys
from os.path import join, dirname
from shutil import rmtree

import natcap.invest.ndr.ndr
import natcap.invest.utils

sys.path.append(join(dirname(__file__), '..'))
from load_params import load_params

params = load_params(
    check_params=[
        ['run_params', 'NCP_RUN_SCENARIO_ID'],
        ['run_params', 'NCP_RUN_YEAR'],
        ['run_params', 'NCP_RUN_OUTPUT_DIR'],
        ['data', 'lulc'],
        ['data', 'dem'],
        ['data', 'yearly_precipitation'],
        ['data', 'watersheds'],
        ['NDR', 'biophysical_table_path'],
        ['NDR', 'calc_n'],
        ['NDR', 'calc_p'],
        ['NDR', 'k_param'],
        ['other', 'n_workers'],
        ['NDR', 'subsurface_critical_length_n'],
        ['NDR', 'subsurface_eff_n'],
        ['NDR', 'threshold_flow_accumulation'],
        ['other', 'remove_temp_files'],
    ]
)

args = {
    # This dictionary contains the input parameters required to run the NDR
    # model. Each key-value pair specifies a parameter and its corresponding
    # value.

    'biophysical_table_path': params['NDR']['biophysical_table_path'],
    'calc_n': params['NDR']['calc_n'],
    'calc_p': params['NDR']['calc_p'],
    'dem_path': params['data']['dem'],
    'k_param': params['NDR']['k_param'],
    'lulc_path': params['data']['lulc'],
    'n_workers': params['other']['n_workers'],
    'runoff_proxy_path': params['data']['yearly_precipitation'],
    'subsurface_critical_length_n': params['NDR'][
        'subsurface_critical_length_n'],
    'subsurface_eff_n': params['NDR']['subsurface_eff_n'],
    'threshold_flow_accumulation': params['NDR']['threshold_flow_accumulation'],
    'watersheds_path': params['data']['watersheds'],
    'workspace_dir': join(
        params['run_params']['NCP_RUN_OUTPUT_DIR'],
        params['run_params']['NCP_RUN_SCENARIO_ID'],
        'NDR',
        params['run_params']['NCP_RUN_YEAR']),
}

# Executes the NDR model with the specified input parameters.
if __name__ == '__main__':
    print("NDR: Starting Nutrient Delivery Ratio model...")
    natcap.invest.ndr.ndr.execute(args)
    print("NDR: ...done!")

    if params['other']['remove_temp_files']:
        # remove intermediate outputs
        intermediate_output_dir = join(
            params['run_params']['NCP_RUN_OUTPUT_DIR'],
            params['run_params']['NCP_RUN_SCENARIO_ID'],
            'NDR',
            params['run_params']['NCP_RUN_YEAR'], 'intermediate_outputs')
        print(f"Removing intermediate outputs in {intermediate_output_dir}")
        # delete folder
        rmtree(intermediate_output_dir)
